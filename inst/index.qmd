---
format: 
  html:
    citation-location: document
---

```{r "intro"}
#| echo: false
intro <- tryCatch(
    {
        description <- packageDescription("BiocBookDemo")
        pkg <- description$Package
        version <- description$Version
        authors <- eval(parse(text = description$Authors))
        license <- description$License
        glue::glue(
            "**Package:** {pkg}<br/>\n", 
            "**Authors:** {paste(format(authors, include = c('given', 'family', 'role')), collapse = ', ')}<br/>\n", 
            "**Compiled:** {as.character(Sys.Date())}<br/>\n", 
            "**Package version:** {version}<br/>\n", 
            "**R version:** <b style='color:red;'>{R.version.string}</b><br/>\n", 
            "**BioC version:** <b style='color:red;'>{BiocManager::version()}</b><br/>\n", 
            "**License:** {license}<br/>"
        )
    }, 
    error = function(e) {"Local preview"}
)
```

`r intro`

# What are `BiocBook`s? {-}

`BiocBook`s are **package-based, versioned online books** with a **supporting
`Docker` image** for each book version. 

A `BiocBook` can be created by authors (e.g. `R` developers, but also scientists, teachers, communicators, ...) who wish to: 

1. *Write*: compile a **body of biological and/or bioinformatics knowledge**;
2. *Containerize*: provide **Docker images** to reproduce the examples illustrated in the compendium;
3. *Publish*: deploy an **online book** to disseminate the compendium; 
4. *Versionize*: **automatically** generate specific online book versions and Docker images for specific [Bioconductor releases](https://contributions.bioconductor.org/use-devel.html). 

::: {.callout-tip icon='true'}

A {`BiocBook`}-based package in Bioconductor `devel` or release `X.Y` (i.e. with a branch named `RELEASE_X_Y`) provides: 

- A **Docker image**: hosted on [ghcr.io](https://github.com/features/packages);
- A **`BiocBook` online book (a.k.a website)**: hosted on the repository `gh-pages` branch;

Both are built against the specific Bioconductor release `X.Y`.

:::

![](pages/images/workflow.jpg)

# What is this {`BiocBook`} package? {-}

The [{BiocBook} **package**](https://github.com/js2264/BiocBook) 
offers a streamlined approach to creating `BiocBook`s, 
with several important benefits: 

- The author creates a {`BiocBook`}-based package without leaving R;
- The author writes book chapters in `pages/*.qmd` files using enhanced markdown; 
- The author can submit its {`BiocBook`}-based package to Bioconductor.

The containerization and publishing of the new {`BiocBook`}-based package is automated:

- Github Action workflow generates different Docker images for different Bioconductor releases, with the packages used in the book pre-installed;
- A Github Action workflow publishes different book versions for different Bioconductor releases.

# Main features of `BiocBook`s {-}

## Fully compatible with the *Bioconductor Build System* {-}

When a {`BiocBook`}-based package is accepted into Bioconductor, it is 
automatically integrated into the *Bionconductor Build System* (BBS). 

This means that it is getting built using 
`R CMD build --keep-empty-dirs --no-resave-data .`. This triggers 
the rendering of the book contained in `/inst/`. Book packages 
built by the BBS are then automatically deployed and are eventually available 
at `https://bioconductor.org/books/<bioc_version>/<pkg>/`.

## Automated versioning of Docker images {-}

A separate Docker image is built for each branch (named `devel` or `RELEASE_X_Y`) 
of a {`BiocBook`}-based **Github repository**.  

Each Docker image provides pre-installed `R` packages: 

- Bioconductor release `X.Y`;
- Specific book dependencies from Bioconductor release `X.Y` (listed in `DESCRIPTION`);
- The book package itself

The Docker images also include a `micromamba`-based environment, named `BiocBook`, 
in which all the softwares listed in `requirements.yml` are installed. 

For example, `Docker` images built from the {`BiocBookDemo`} package repository are available here: 

üëâ [ghcr.io/js2264/biocbookdemo](https://ghcr.io/js2264/biocbookdemo) üê≥

::: {.callout-tip icon='true'}

### Get started now üéâ

You can get access to all the packages used in this book in < 1 minute, 
using this command in a terminal: 

```{sh "docker", filename="bash"}
#| eval: false
docker run -it ghcr.io/js2264/biocbookdemo:devel R
```

:::

## Automated versioning of the online book {-}

Regardless of whether the book package is submitted to Bioconductor, a Github Actions 
workflow publishes individual online books for each branch 
(named `devel` or `RELEASE_X_Y`) of a `BiocBook`-based **Github repository**.  

For example, the online book version matching the `devel` version of the {`BiocBook`} package is available from: 

üëâ [http://js2264.github.io/BiocBookDemo/devel/](http://js2264.github.io/BiocBookDemo/devel/) üìò

# RStudio Server {-}

An RStudio Server instance based on a specific Bioconductor `<version>` (`devel` or `RELEASE_X_Y`) 
can be initiated from the corresponding `Docker` image as follows: 

```{sh "rstudio", filename="bash"}
#| eval: false
docker run \
    --volume <local_folder>:<destination_folder> \
    -e PASSWORD=OHCA \
    -p 8787:8787 \
    ghcr.io/<github_user>/<biocbook_repo>:<version>
```

The initiated RStudio Server instance will be available at 
[https://localhost:8787](https://localhost:8787).

Further instructions regarding Bioconductor-based Docker images are 
available [here](https://bioconductor.org/help/docker/). 

# Acknowledgments {-}

This works was inspired by and closely follows the strategy used in coordination 
by the Bioconductor core team and Aaron Lun to submit book-containing 
packages (from the `OSCA` series as well as `SingleR` and `csaw` books). 

- @OSCA
- @SingleR
- @csaw

This package was also inspired by the `*down` package series, including: 

- @knitr
- @bookdown
- @pkgdown

# Session info {-}

::: {.callout-note collapse="true"}

## Click to expand üëá

```{r "session info"}
#| cache: false
sessioninfo::session_info(
    installed.packages()[,"Package"], 
    include_base = TRUE
)
```

:::

# References {-}
